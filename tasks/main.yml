---
- name: get local facts
  sudo: false
  connection: local
  modcloth_app_facts:
    github_token={{ github_token }}
    repo={{ modcloth_app_github_repo }}
    revision={{ modcloth_app_docker_tag }}
  changed_when: False

- name: render hipchat deployment html
  sudo: false
  connection: local
  template:
    src=hipchat_notification.frag.html.j2
    dest={{ modcloth_app_hipchat_html }}
    mode=0644
  changed_when: False
  when: hipchat_token != "" and hipchat_room != ""
  ignore_errors: True

- name: notify hipchat deploy started
  sudo: false
  connection: local
  hipchat:
    token: "{{ hipchat_token }}"
    room: "{{ hipchat_room }}"
    msg: "{{ lookup('file', modcloth_app_hipchat_html).replace('__ACTION__', 'deploying').replace('__NETWORK_ENV__', env ) }}"
    msg_format: html
    color: yellow
  changed_when: False
  when: hipchat_token != "" and hipchat_room != ""
  ignore_errors: True
  run_once: yes

- name: write etc default file
  template:
    src={{ modcloth_app_etc_default_template }}
    dest=/etc/default/{{ modcloth_app_name }}
    owner=root group=root mode=0644
  when: modcloth_app_etc_default_template != ""
  register: modcloth_app_write_etc_default_file

- name: pull container
  docker_pull:
    repo={{ modcloth_app_docker_repo }}
    tag={{ modcloth_app_docker_tag }}
  when: modcloth_app_docker_repo != ""
  register: modcloth_app_pull_container

- include: cron.yml
  when: modcloth_app_type == "cron"
  register: modcloth_app_type_cron

- include: long-running.yml
  when: modcloth_app_type == "long-running"
  register: modcloth_app_type_long_running

- name: notify hipchat deploy complete
  sudo: false
  connection: local
  hipchat:
    token: "{{ hipchat_token }}"
    room: "{{ hipchat_room }}"
    msg: "{{ lookup('file', modcloth_app_hipchat_html).replace('__ACTION__', 'done deploying').replace('__NETWORK_ENV__', env ) }}"
    msg_format: html
    color: green
  changed_when: False
  when: hipchat_token != "" and hipchat_room != ""
  ignore_errors: True
  run_once: yes

- name: notify new relic deploy complete
  sudo: false
  newrelic_deployment:
    token="{{new_relic_api_token}}"
    app_name="{{modcloth_app_new_relic_app_name}}"
    revision="{{modcloth_app_docker_tag}}"
    user="{{modcloth_app_deployer}}"
  when: modcloth_app_notify_new_relic|bool
  ignore_errors: True
  run_once: yes
